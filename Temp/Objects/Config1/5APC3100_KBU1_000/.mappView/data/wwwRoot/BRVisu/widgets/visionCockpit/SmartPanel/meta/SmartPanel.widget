<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.visionCockpit.SmartPanel">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
			<LicenseInfo>unlicensed</LicenseInfo>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/BaseWidget.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/config/Config.js</File>
				<File>brease/core/Utils.js</File>
				<File>brease/events/BreaseEvent.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/external/web_control.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/pixelcloud/PixelCloud.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/xldcloud/XldCloud.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/ParameterHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/IAParameterHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/DownloadHandler.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/crosshair/CrosshairRoi.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/Rectangle/RectangleRoi.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/SelectionController/SelectionController.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/Circle/CircleRoi.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/EllipseRing/EllipseRing.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/Freehand/FreehandTool.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/ServerRoi/ServerRoi.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/roi/Orientation/OrientationArrow.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/pipette/pipette.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/navigationBetweenVisionFunctions.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/widgetsHandling/widgetsHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/widgetsHandling/smartPanelParameterFormHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/widgetsHandling/smartPanelModelListHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/GlobalModelHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/widgetsHandling/groupBoxesHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/widgetsHandling/loggerHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/dialog/saveAsDialogHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/dialog/confirmationDialog.js</File>
				<File>widgets/visionCockpit/SmartPanel/communication/VisionServerEncoder.js</File>
				<File>widgets/visionCockpit/SmartPanel/communication/VisionServerDecoder.js</File>
				<File>widgets/visionCockpit/SmartPanel/communication/SocketHandling.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/DataRepository/VisionProgramRepository.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/DataProvider/VisionProgramDataProvider.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/ColorSettings.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/ResultFilter/ResultFilter.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/CapabilityReader/CapabilityReader.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/IconicDictionary/IconicDictionary.js</File>
				<File>widgets/visionCockpit/SmartPanel/libs/IconicDecoder/IconicDecoder.js</File>
				<File>widgets/brease/BusyIndicator/BusyIndicator.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/visionCockpit/SmartPanel/SmartPanel.js</Widget>
				<Widget>widgets/brease/BusyIndicator/BusyIndicator.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Vision</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Vision main widget. The widgetd connects to the backend</Description>
			<Description name="de">(INTERNAL USE ONLY) Vision Hauptwidget. Dieses Widget verbindet sich mit dem Backend</Description>
			<Description name="en">(INTERNAL USE ONLY) The widgetd connects to the backend</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.visionCockpit.SmartPanel</Class>
			<Class level="1">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="AddExecutionTool" read="false">
				<Description>Add Execution Tool</Description>
				<Arguments>
					<Argument name="roiTool" type="Object" index="0" required="true"/>
					<Argument name="roiFunction" type="Object" index="1" required="true"/>
				</Arguments>
			</Method>
			<Method name="DeleteSelectedTools" read="false">
				<Description>Deleted selected ROIs</Description>
			</Method>
			<Method name="Focus" read="false">
				<Description>Sets focus on the widget element, if it can be focused and keyboardOperation=true</Description>
			</Method>
			<Method name="HideAllResultClouds" read="false">
				<Description>hide all result clouds</Description>
			</Method>
			<Method name="LoadImage" read="false">
				<Description>Load image</Description>
			</Method>
			<Method name="OnButtonResultFilterPrevious" read="false">
				<Description>on Button Result Filter Previous</Description>
			</Method>
			<Method name="RemoveRoi" read="false">
				<Arguments>
					<Argument name="index" type="UInteger" index="0" required="true">
						<Description>Allows to delete a roi inside of this widget. The roi is identified by it&apos;s index. Index starts at zero.</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SaveConfigurationToFile" read="false">
				<Description>Download the current parameter configuration as a file</Description>
			</Method>
			<Method name="SetEnable" read="false">
				<Description>Sets the state of property «enable»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetStyle" read="false">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetVisible" read="false">
				<Description>Sets the state of property «visible»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="ShowAllResultClouds" read="false">
				<Description>show all result clouds</Description>
			</Method>
			<Method name="ShowTooltip" read="false"/>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="1" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="2" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="DisabledClick">
				<Description>Fired when disabled element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="hasPermission" type="Boolean" index="1" required="true">
						<Description>defines if the state is caused due to missing roles of the current user</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="2" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="3" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Description>Fired when operability of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>operability</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="FocusIn">
				<Description>Fired when the widgets gets focus</Description>
			</Event>
			<Event name="FocusOut">
				<Description>Fired when the widgets lost focus</Description>
			</Event>
			<Event name="VisibleChanged">
				<Description>Fired when the visibility of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>visibility</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="activatedLinesensor" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="false">
				<Description>activatedLinesensor indicates that the the line sensor aktiv oder aktiv ist</Description>
			</Property>
			<Property name="dataProviderModelTypes" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="">
				<Description>String for the dropDownBow with the information about the moel types</Description>
			</Property>
			<Property name="editModelsTabVisible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="true">
				<Description>Flag to indicate if edit models tab is visible</Description>
			</Property>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.</Description>
			</Property>
			<Property name="executionRoiVisible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="false">
				<Description>Flag to indicate if execution roi is visible</Description>
			</Property>
			<Property name="extendedParametersRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the extended parameters</Description>
			</Property>
			<Property name="imageAcquisitionVariablesRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>ID for the parameter form with the PVs for image acquisition</Description>
			</Property>
			<Property name="isSelectedImageAcquisition" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="false">
				<Description>Flag to indicate if image acquisition is selected</Description>
			</Property>
			<Property name="lightAndFocusRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the parameters of light and focus</Description>
			</Property>
			<Property name="lineSensorNormalImageModeButtonRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of the button for the normal image mode</Description>
			</Property>
			<Property name="loggerArrayDescription" type="StringArray1D" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data">
				<Description>One-dimensional Array containing data of type string for the description from the logger</Description>
			</Property>
			<Property name="loggerArrayId" type="StringArray1D" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data">
				<Description>One-dimensional Array containing data of type string for the id from the logger</Description>
			</Property>
			<Property name="loggerArraySeverity" type="NumberArray1D" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data">
				<Description>One-dimensional Array containing data of type Number for the severity</Description>
			</Property>
			<Property name="loggerArrayTime" type="StringArray1D" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data">
				<Description>One-dimensional Array containing data of type string for the time from the logger</Description>
			</Property>
			<Property name="loggerCounterOfErrors" type="Integer" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="0">
				<Description>Logger counter of errors</Description>
			</Property>
			<Property name="loggerCounterOfInformations" type="Integer" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="0">
				<Description>Logger counter of informations</Description>
			</Property>
			<Property name="loggerCounterOfSuccesses" type="Integer" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="0">
				<Description>Logger counter of successes</Description>
			</Property>
			<Property name="loggerCounterOfWarnings" type="Integer" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="0">
				<Description>Logger counter of warnings</Description>
			</Property>
			<Property name="loggerImagePathSuccess" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="Media/mappVision/icons/loggerSeverity/gray/icon_success.svg">
				<Description>Path to image file of logger info success</Description>
			</Property>
			<Property name="numResults" type="Integer" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="1">
				<Description>For num results</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles</Description>
			</Property>
			<Property name="refIdButtonDelete" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Submit-Delete</Description>
			</Property>
			<Property name="refIdButtonHideAllResults" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of HideAllResults-Button</Description>
			</Property>
			<Property name="refIdButtonShowAllResults" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of ShowAllResults-Button</Description>
			</Property>
			<Property name="refIdButtonTeach" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Teach-Button</Description>
			</Property>
			<Property name="refIdGroupBoxGenericVisionFuntion" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Name of the groupBox for the generic Vision Funtion</Description>
			</Property>
			<Property name="refIdGroupBoxImageAcquisition" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Name of the groupBox for the image acquisition</Description>
			</Property>
			<Property name="refIdGroupBoxVisionParameters" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data" defaultValue="">
				<Description>Name of the groupBox for the vision parameters</Description>
			</Property>
			<Property name="refIdNumericInputFilter" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the extended parameters</Description>
			</Property>
			<Property name="refIdProcessVariablesFilter" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of the Textoutput for the Filter</Description>
			</Property>
			<Property name="selectedImage" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Name of currently selected Image</Description>
			</Property>
			<Property name="selectedModelType" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Name of currently selected model type</Description>
			</Property>
			<Property name="selectedVisionFunction" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Name of currently selected vision function</Description>
			</Property>
			<Property name="showOnlyOneTabForAVisionFuntionTab" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="false">
				<Description>Flag to indicate if only one tab for a vision funtion is visible</Description>
			</Property>
			<Property name="statusReady" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="false">
				<Description>status ready indicates that the widget is in state to accept a further command</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type</Description>
			</Property>
			<Property name="tabIndex" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="-1">
				<Description>sets if a widget should have autofocus enabled (0), the order of the focus (&gt;0),
or if autofocus should be disabled (-1)				</Description>
			</Property>
			<Property name="tooltip" type="String" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>reference to a tooltip for a widget</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility</Description>
			</Property>
			<Property name="visionAplicationNavigation" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="">
				<Description>String for the vision aplication navigation</Description>
			</Property>
			<Property name="visionComponentReference" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Reference to the visionComponent</Description>
			</Property>
			<Property name="visionFunctionConstantsRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the constants of the Vision Function</Description>
			</Property>
			<Property name="visionFunctionGlobalModel" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the parameters of the GlobalModel</Description>
			</Property>
			<Property name="visionFunctionGlobalModelListRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the variables of the Vision Function</Description>
			</Property>
			<Property name="visionFunctionModelListRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the variables of the Vision Function</Description>
			</Property>
			<Property name="visionFunctionModelParameterRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the model parameter of the model</Description>
			</Property>
			<Property name="visionFunctionName" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="true" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Name of currently selected vision function (as defined in config.xml)</Description>
			</Property>
			<Property name="visionFunctionSubPath" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>sub directory in visionFunctionsRootPath for vision function (this is not necessarily equal to visionFunctionName)</Description>
			</Property>
			<Property name="visionFunctionVariablesRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the variables of the Vision Function</Description>
			</Property>
			<Property name="visionFunctionsRootPath" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Base path for all vision functions, offline mode only</Description>
			</Property>
			<Property name="visionImageAcquisitionSettingsRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the image acquisition settings</Description>
			</Property>
			<Property name="visionLineSensorSettingsRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the image acquisition settings</Description>
			</Property>
			<Property name="visionNormalImageParametersRefId" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="true" projectable="true" category="Data">
				<Description>Name of Widget on same Content that handles the normal image parameters</Description>
			</Property>
		</Properties>
		<StyleProperties>
			<StyleProperty name="width" type="AutoSize" not_styleable="true" owner="widgets.visionCockpit.SmartPanel" category="Layout" groupRefId="Size" groupOrder="1" default="640">
				<StyleElement attribute="@include elemWidth($value)"/>
				<Description>outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="height" type="AutoSize" not_styleable="true" owner="widgets.visionCockpit.SmartPanel" category="Layout" groupRefId="Size" groupOrder="2" default="480">
				<StyleElement attribute="@include elemHeight($value)"/>
				<Description>outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
				<StyleElement attribute="@include elemTop($value)"/>
				<Description>absolute position measured from top boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
				<StyleElement attribute="@include elemLeft($value)"/>
				<Description>absolute position measured from left boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
				<StyleElement attribute="z-index"/>
				<Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;
        The zIndex must be unique within a content.&lt;br/&gt;				</Description>
			</StyleProperty>
		</StyleProperties>
		<PropertyGroups>
			<PropertyGroup name="Size" type="String" category="Layout">
				<Description>outer height and width of widget</Description>
			</PropertyGroup>
			<PropertyGroup name="Position" type="String" category="Layout">
				<Description>top and left of widget</Description>
			</PropertyGroup>
		</PropertyGroups>
	<BindingTemplates>
  
</BindingTemplates>
</Widget>
</WidgetLibrary>